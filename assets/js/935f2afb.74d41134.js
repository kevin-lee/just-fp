"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Getting Started","href":"/docs/","docId":"getting-started","unlisted":false},{"type":"category","label":"Syntax","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Either","href":"/docs/syntax/either","docId":"syntax/either","unlisted":false},{"type":"link","label":"Option","href":"/docs/syntax/option","docId":"syntax/option","unlisted":false},{"type":"link","label":"Type-safe Equal","href":"/docs/syntax/type-safe-equal","docId":"syntax/type-safe-equal","unlisted":false}],"href":"/docs/syntax/"},{"type":"category","label":"Typeclass","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Applicative","href":"/docs/typeclass/applicative","docId":"typeclass/applicative","unlisted":false},{"type":"link","label":"EitherT","href":"/docs/typeclass/either-t","docId":"typeclass/either-t","unlisted":false},{"type":"link","label":"Functor","href":"/docs/typeclass/functor","docId":"typeclass/functor","unlisted":false},{"type":"link","label":"Monad","href":"/docs/typeclass/monad","docId":"typeclass/monad","unlisted":false},{"type":"link","label":"Monoid","href":"/docs/typeclass/monoid","docId":"typeclass/monoid","unlisted":false},{"type":"link","label":"Semi-Group","href":"/docs/typeclass/semi-group","docId":"typeclass/semi-group","unlisted":false},{"type":"link","label":"WriterT","href":"/docs/typeclass/writer-t","docId":"typeclass/writer-t","unlisted":false}],"href":"/docs/typeclass/"}]},"docs":{"getting-started":{"id":"getting-started","title":"Getting Started","description":"just-fp","sidebar":"docsSidebar"},"syntax/either":{"id":"syntax/either","title":"Either","description":"Either","sidebar":"docsSidebar"},"syntax/option":{"id":"syntax/option","title":"Option","description":"Option","sidebar":"docsSidebar"},"syntax/syntax":{"id":"syntax/syntax","title":"Syntax","description":"* Either","sidebar":"docsSidebar"},"syntax/type-safe-equal":{"id":"syntax/type-safe-equal","title":"Type-safe Equal","description":"Type-safe Equal","sidebar":"docsSidebar"},"typeclass/applicative":{"id":"typeclass/applicative","title":"Applicative","description":"Applicative","sidebar":"docsSidebar"},"typeclass/either-t":{"id":"typeclass/either-t","title":"EitherT","description":"EitherT","sidebar":"docsSidebar"},"typeclass/functor":{"id":"typeclass/functor","title":"Functor","description":"Functor","sidebar":"docsSidebar"},"typeclass/monad":{"id":"typeclass/monad","title":"Monad","description":"","sidebar":"docsSidebar"},"typeclass/monoid":{"id":"typeclass/monoid","title":"Monoid","description":"Monoid is a SemiGroup with identity element which guarantees that","sidebar":"docsSidebar"},"typeclass/semi-group":{"id":"typeclass/semi-group","title":"Semi-Group","description":"A semi-group is a typeclass which can apply associative binary operation.","sidebar":"docsSidebar"},"typeclass/typeclass":{"id":"typeclass/typeclass","title":"Typeclass","description":"Typeclass","sidebar":"docsSidebar"},"typeclass/writer-t":{"id":"typeclass/writer-t","title":"WriterT","description":"","sidebar":"docsSidebar"}}}')}}]);